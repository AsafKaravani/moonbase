version: v1.0
name: Initial Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
global_job_config:
  prologue:
    commands:
      - checkout
blocks:
  - name: Static Code Analysis
    dependencies: []
    task:
      jobs:
        - name: Send code to SonarQube
          commands:
            - echo "Need to setup SonarQube"
        - name: Send code to Synk
          commands:
            - echo $blabla
  - name: Deploy to Prod
    dependencies:
      - Build
    task:
      jobs:
        - name: Redeploy DigitalOcean droplet
          commands:
            - brew install argocd
            - argocd login 143.244.206.182 --insecure --username admin --password LguFRFEEE2bqOuGK
            - argocd app actions run frently-dev restart --kind Deployment
    run:
      when: branch = 'master'
  - name: Build
    dependencies:
      - Install
      - Lint
      - Static Code Analysis
    task:
      jobs:
        - name: Docker build and push
          commands:
            - source .semaphore/get-npm-package-version.sh ./services/client/package.json
            - echo $PACKAGE_VERSION
            - echo $MOONPACKET_DOCKER_PASSWORD | docker login --username "$MOONPACKET_DOCKER_USERNAME" --password-stdin
            - 'echo "moonpacket/moonbase-client:$PACKAGE_VERSION-$SEMAPHORE_GIT_BRANCH-$SEMAPHORE_GIT_SHA"'
            - 'docker build ./services/client -t "moonpacket/moonbase-client:$PACKAGE_VERSION-$SEMAPHORE_GIT_BRANCH-$SEMAPHORE_GIT_SHA" -t "moonpacket/moonbase-client:$SEMAPHORE_GIT_BRANCH-latest"'
            - 'docker push "moonpacket/moonbase-client:$PACKAGE_VERSION-$SEMAPHORE_GIT_BRANCH-$SEMAPHORE_GIT_SHA"'
            - 'docker push "moonpacket/moonbase-client:$SEMAPHORE_GIT_BRANCH-latest"'
      secrets:
        - name: MOONPACKET_DOCKER_PASSWORD
        - name: MOONPACKET_DOCKER_USERNAME
    run:
      when: branch = 'master' or branch = 'development'
  - name: Lint
    dependencies: []
    task:
      jobs:
        - name: Yarn lint
          commands:
            - yarn lint
  - name: Install
    dependencies: []
    task:
      jobs:
        - name: Yarn install
          commands:
            - yarn install
  - name: Deploy to Staging
    dependencies:
      - Build
    task:
      jobs:
        - name: Redeploy DigitalOcean droplet
          commands: []
    run:
      when: branch = 'development'
